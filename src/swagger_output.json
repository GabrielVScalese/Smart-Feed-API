{
  "openapi": "3.0.0",
  "info": {
    "title": "Smart Feed API",
    "description": "This API controls users and their pets",
    "contact": {
      "email": "cc19171@g.unicamp.br"
    },
    "version": "1.0.0"
  },
  "schemes": ["http", "https"],
  "host": "smart-feed-app.herokuapp.com/",
  "servers": [],
  "paths": {
    "/users": {
      "post": {
        "summary": "Add a new user",
        "description": "This route adds a new user",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Gabriel Scalese",
                    "email": "cc19171@g.unicamp.br",
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update user",
        "description": "Only existing user.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Gabriel Scalese",
                    "email": "gabriel.cotuca@hotmail.com",
                    "password": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Nonexistent user"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Only existing user.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Nonexistent user"
          }
        }
      }
    },
    "/users/authenticate": {
      "post": {
        "summary": "Authenticate a user",
        "description": "This route authenticates a user",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "cc19171@g.unicamp.br",
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Nonexistent user"
          }
        }
      }
    },
    "/pets": {
      "post": {
        "summary": "Add a new pet",
        "description": "This route adds a new pet.",
        "tags": ["Pets"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user_id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "animal": {
                    "type": "string"
                  },
                  "ration": {
                    "type": "string"
                  },
                  "size": {
                    "type": "string"
                  },
                  "device": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "pet": {
                  "value": {
                    "user_id": 39,
                    "name": "Bella",
                    "animal": "Cão",
                    "ration": "Premium",
                    "size": "Grande",
                    "device": "Smart Feed UHG78F",
                    "image": "https://th.bing.com/th/id/OIP.ZIF41Upi75jdmWdg2lURQgHaHa?pid=ImgDet&rs=1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "put": {
        "summary": "Update pet",
        "description": "Only existing pet.",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user_id": { "type": "number" },
                  "name": {
                    "type": "string"
                  },
                  "animal": {
                    "type": "string"
                  },
                  "ration": {
                    "type": "string"
                  },
                  "size": {
                    "type": "string"
                  },
                  "device": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "pet": {
                  "value": {
                    "user_id": 40,
                    "name": "Bella",
                    "animal": "Cão",
                    "ration": "Super Premium",
                    "size": "Grande",
                    "device": "Smart Feed UJK4EG",
                    "image": "https://th.bing.com/th/id/OIP.ZIF41Upi75jdmWdg2lURQgHaHa?pid=ImgDet&rs=1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Nonexistent pet"
          }
        }
      },
      "delete": {
        "summary": "Delete pet",
        "description": "Only existing pet.",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pet id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Nonexistent pet"
          }
        }
      }
    },
    "/pets/findByOwner/{id}": {
      "get": {
        "summary": "Find pets by owner id",
        "description": "Get all pets using a owner id.",
        "tags": ["Pets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nonexistent owner"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "Pet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "user_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "animal": {
            "type": "string"
          },
          "ration": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "device": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      }
    }
  }
}
